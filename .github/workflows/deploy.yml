name: Deploy EventBridge Scheduler

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      api_endpoint:
        description: 'API Endpoint to call'
        required: false
        default: 'https://your-api-server.com/endpoint'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build TypeScript
      run: npx tsc
    
    - name: Create deployment package
      run: |
        # Clean up compiled JS
        cd dist
        sed -i 's/"use strict";//g' lambda_function.js
        sed -i '/Object\.defineProperty.*__esModule/d' lambda_function.js
        sed -i '/exports\.handler = void 0;/d' lambda_function.js
        sed -i '/exports\.handler = handler;/d' lambda_function.js
        sed -i '/\/\/# sourceMappingURL/d' lambda_function.js
        
        # Create index.js
        cp lambda_function.js index.js
        echo -e "\n\nexports.handler = handler;" >> index.js
        
        # Create zip
        zip -r lambda-deployment.zip index.js
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
    
    - name: Upload to S3
      run: |
        aws s3 cp dist/lambda-deployment.zip s3://${{ secrets.S3_BUCKET }}/lambda-deployment.zip
    
    - name: Deploy CloudFormation
      run: |
        aws cloudformation deploy \
          --template-file eventbridge-scheduler.yaml \
          --stack-name eventbridge-api-scheduler \
          --capabilities CAPABILITY_IAM \
          --parameter-overrides \
            S3Bucket=${{ secrets.S3_BUCKET }} \
            S3Key=lambda-deployment.zip \
            ApiEndpoint="${{ github.event.inputs.api_endpoint || 'https://your-api-server.com/endpoint' }}"